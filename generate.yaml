Resources:
  S3NotificationProcessorServiceRoleE088EA38:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/S3NotificationProcessor/ServiceRole/Resource
  S3NotificationProcessorD2382684:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 54e1bcec3e125eae22c23b407892e9ddd940970fc2b8eeb257a1724118e44902.zip
      Role:
        Fn::GetAtt:
          - S3NotificationProcessorServiceRoleE088EA38
          - Arn
      FunctionName: S3NotificationProcessor
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 30
    DependsOn:
      - S3NotificationProcessorServiceRoleE088EA38
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/S3NotificationProcessor/Resource
      aws:asset:path: asset.54e1bcec3e125eae22c23b407892e9ddd940970fc2b8eeb257a1724118e44902
      aws:asset:is-bundled: false
      aws:asset:property: Code
  S3NotificationProcessorLambdaInvokePermission0E640E97:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3NotificationProcessorD2382684
          - Arn
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - govatestbucket142955F54
          - Arn
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/S3NotificationProcessor/LambdaInvokePermission
  govatestbucket142955F54:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: gova-test-bucket-1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/gova-test-bucket-1/Resource
  LambdaIAMRole149A597F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetBucketNotification
                  - s3:PutBucketNotification
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - govatestbucket142955F54
                    - Arn
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
            Version: "2012-10-17"
          PolicyName: root
      RoleName: LambdaIAMRole
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/LambdaIAMRole/Resource
  CustomLambda09113333:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d48c4dbca623860d266ccc603a33d04dd6ce08bed426acc888c632ce2bf32cc8.zip
      Role:
        Fn::GetAtt:
          - LambdaIAMRole149A597F
          - Arn
      FunctionName: CustomLambda
      Handler: index.lambda_handler
      Runtime: python3.7
      Timeout: 30
    DependsOn:
      - LambdaIAMRole149A597F
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/CustomLambda/Resource
      aws:asset:path: asset.d48c4dbca623860d266ccc603a33d04dd6ce08bed426acc888c632ce2bf32cc8
      aws:asset:is-bundled: false
      aws:asset:property: Code
  providerframeworkonEventServiceRole72DDF894:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/provider/framework-onEvent/ServiceRole/Resource
  providerframeworkonEventServiceRoleDefaultPolicyE786389D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CustomLambda09113333
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CustomLambda09113333
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: providerframeworkonEventServiceRoleDefaultPolicyE786389D
      Roles:
        - Ref: providerframeworkonEventServiceRole72DDF894
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  providerframeworkonEvent40A4D59F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - providerframeworkonEventServiceRole72DDF894
          - Arn
      Description: AWS CDK resource provider framework - onEvent (CustomLambdaWithReservedConcurrencyStack/provider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - CustomLambda09113333
              - Arn
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - providerframeworkonEventServiceRoleDefaultPolicyE786389D
      - providerframeworkonEventServiceRole72DDF894
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/provider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LambdaTrigger:
    Type: Custom::LambdaTriggerGova
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - providerframeworkonEvent40A4D59F
          - Arn
      lambdaArn:
        Fn::GetAtt:
          - S3NotificationProcessorD2382684
          - Arn
      bucket:
        Fn::GetAtt:
          - govatestbucket142955F54
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/LambdaTrigger/Default
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02OwQ6CMBBEv4V7WRWMdyXxTPADSG1Xs0LbpNtqTMO/C8UDp3mzM5tMBcca9oX8cKn0UI50h3QLUg1iPvVplOauJaRrtCqQs6J52C236A0xz24SJA2kzo24BFlbN5L65l6mSXDdS2YMDOdFZg/pEtWA4SIZxYrLw0rTJHJvXvQk+xQqcnCm98gueoUMrXdv0uhFk5PuH+QFG26c1RTySus0wot378MJDjVUxYuJSh9tIIPQrfoDt4s3QxYBAAA=
    Metadata:
      aws:cdk:path: CustomLambdaWithReservedConcurrencyStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

